name: IP Logger

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

jobs:
  update-ip:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install gspread google-auth requests

      - name: Create credentials file and validate (robust auto-fix)
        run: |
          printf '%s' "${{ secrets.GOOGLE_CREDENTIALS }}" > credentials.json
          python - <<'PY'
          import json,sys,re
          raw = open('credentials.json','rb').read()
          # Try direct decode
          try:
              text = raw.decode('utf-8')
          except:
              text = raw.decode('utf-8', errors='replace')
          # Remove BOM if present
          if text.startswith('\ufeff'):
              text = text.lstrip('\ufeff')
          # Trim whitespace and any extraneous characters before first {
          idx = text.find('{')
          if idx > 0:
              text = text[idx:]
          # If the content is wrapped in quotes (common paste error), unwrap one layer
          if text.startswith('"') and text.endswith('"'):
              text = text[1:-1]
          # Replace literal backslash-n sequences with real newlines
          text = text.replace('\\n', '\n').replace('\\t','\t')
          # Remove any stray control chars that commonly break JSON (except standard whitespace)
          text = re.sub(r'[\x00-\x08\x0b\x0c\x0e-\x1f]', '', text)
          # Final validation and write
          try:
              json.loads(text)
              with open('credentials.json','w', encoding='utf-8') as f:
                  f.write(text)
              print('CREDENTIALS_JSON_OK')
              sys.exit(0)
          except Exception as e:
              print('JSON_PARSE_ERROR:', e)
              sys.exit(2)
          PY

      - name: Run IP update script
        run: python update_ip.py
